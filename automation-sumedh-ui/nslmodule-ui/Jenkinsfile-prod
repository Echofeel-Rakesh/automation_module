 node('openshift4-prg') {
     currentBuild.displayName = "${currentBuild.number}-${service_name}-${version}"
 }
pipeline {
  agent {
      label 'openshift4-prg-heavy'
  }
  environment {
    git_token = credentials('srv-enterpriseportal-git-token')
    ocp_token = credentials('ent_ocptoken')
    ARTIFACTORY_URL = "enterpriseprotal-docker-release-local.artifactory.dhl.com"
    ARTIFACTORY_REPO = "enterpriseprotal-docker-prod"
    date = new Date().format("yyyy-MMM-dd-HH.mm", TimeZone.getTimeZone("IST"))
    image_tag ="${BRANCH}-${version}-${date}"
 //   CBJ_ARTIFACTORY = "docker.artifactory-cbj.dhl.com/enterpriseportal"
    MVN_VERSION = 'Maven 3.8.1'
  }
  stages
    { 
      stage('Building dist file of ${service_name}' ){
        steps{
    
          sh '''
          pwd && ls -l
          cp package.json /home/jenkins
          cp -r dist /home/jenkins/
          ls -l /home/jenkins
          '''
          nodejs('NodeJS 18.10.0') {
             sh 'npm config ls'
             sh 'npm config set strict-ssl false'
             sh 'npm cache clean --force'
             sh 'npm i dist/bd-common-lib/'
             // sh 'pwd && ls -ltr dist/bd-common-lib/'
             sh 'ng build --configuration=production'
             sh 'pwd && ls'
             sh 'ls -l dist'
          }
        }
      }
              stage('Artifact creation of ${service_name}') {
        
            steps { 
 
                script {
                        docker.withRegistry("https://${ARTIFACTORY_URL}", 'ragohil-artifactory-password' ) {
                          sh """
                              cd ${WORKSPACE}/
                            echo "entered into workspace"
                            docker build -t entportal-${service_name} .
                            docker tag entportal-${service_name} ${ARTIFACTORY_URL}/${ARTIFACTORY_REPO}/entportal-${service_name}
                            docker push ${ARTIFACTORY_URL}/${ARTIFACTORY_REPO}/entportal-${service_name}
                            """
                        }
                    }                
                }
       }
          stage('Deploying ${service_name}') {
            steps {
              script{
                  sh '''
                  export service_name=${service_name}
                  export image_tag=${image_tag}
                  oc login --username=${ocp_token_USR}  --password=${ocp_token_PSW} --server=https://api.mykulocp001.dhl.com:6443
                  oc project ecs-enterprise-portal-prod
                  envsubst < DeploymentConfig-prod.yml | oc apply -f -
                  
                  '''
              }
            }
           }
    }
}
